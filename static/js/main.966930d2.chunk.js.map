{"version":3,"sources":["services/vector/rect.ts","services/vector/polar.ts","services/vector/index.ts","services/convert.ts","services/index.ts","services/initialization/initialization.ts","services/initialization/index.ts","services/util.ts","services/cartography.ts","services/geometry/polar.ts","services/geometry/rect.ts","services/geometry/index.ts","services/ship.ts","services/spriteSvc.js","components/spritesheet.png","components/controls.js","components/frame.js","services/reducers/reducers.js","services/reducers/sensors.js","services/reducers/status.js","components/store.js","components/phasers.js","components/shields.js","components/torpedos.js","components/bridge.js","components/cel.js","components/colors.js","components/comms.js","components/game.js","components/scanners.js","components/sprite.js","components/sensors.js","services/actions/scans.ts","services/actions/torpedos.ts","services/actions/warp.ts","components/status.js","components/warp.js","App.js","serviceWorker.js","index.js"],"names":["sum","a","b","x","y","diff","negate","magnitude","Math","sqrt","pow","scale","scalar","scaleXY","dot","c","Convert","d","Rect","negation","Error","r","distance","delta","sign","Vector","Polar","rect2polar","point","theta","atan2","PI","polar2rect","cos","sin","canvas2polar","bounds","p","width","height","polar2canvas","rndPosition","random","range","n","Array","from","keys","rndMinmax","min","max","floor","createStar","type","position","createBase","createEnemy","name","shields","phaser","game","MAX_STARS_SECTOR","map","concat","sectors","createSectors","REGION_NAMES","QUADRANT_NAMES","ship","comms","log","status","endDate","starDate","alert","damage","srs","lrs","warp","shield","paaser","torpedo","damageControl","libraryComputer","sensors","selected","sector","inner","outer","energy","heading","torpedos","inventory","target","phasers","Init","between","lower","value","upper","clamp","regionNames","quadrantNames","quadrantWidth","length","rname","ridx","qname","qidx","reduce","prev","current","getSectorContaining","obj","find","Geometry","contains","within","center","radius","lowerLeft","upperRight","shortRangeScan","objs","filter","longRangeScan","props","friendly","index","zIndex","enemy","base","star","spritePropsFactory","translate","sector2translation","data","o","centerOfSector","rotatedCenter","rotate","depthOfSector","depth","module","exports","ControlBox","children","style","display","flexDirection","justifyContent","marginBottom","RangeControl","title","onChange","rest","orient","e","Number","parseFloat","DisplayControl","precision","margin","toFixed","format","AnnunciatorControl","backgroundColor","border","borderRadius","styles","right","subtitle","top","frame","justify","left","borderBottom","borderRight","bottom","borderTop","borderLeft","bracket","buttonBar","button","cursor","getStyles","Frame","FrameTitle","text","FrameButtonBar","FrameButton","onClick","FrameSubtitle","state","action","splice","indexOf","payload","sensor","Set","values","Context","createContext","useGameState","key","useContext","useGame","useShip","useSensors","useWarp","useDispatch","ctx","sys","StoreProvider","store","useReducer","Reducers","Provider","PhaserControl","dispatch","className","disabled","forEach","hit","onInput","available","ShieldControl","TorpedoControl","useState","bearing","setBearing","useEffect","Bridge","CelContext","React","CelPanel","init","Cel","draw","polar","ref","createRef","getContext","canvas","Consumer","colors","Object","paleCanary","goldenTanoi","neonCarrot","eggplant","lilac","anakiwa","mariner","bahamaBlue","blueBell","melrose","hopBush","chestnutRose","orangePeel","atomicTangerine","danub","indigo","lavenderPurple","cosmic","redDamask","mediumCarmine","bourbon","sandyBrown","husk","rust","tamarillo","Comms","m","Game","idx","setTimeout","grid","arc","strokeStyle","i","color","moveTo","beginPath","lineTo","fillStyle","fill","closePath","stroke","Scanner","onclick","src","sprites","size","ShortRangeScanner","LongRangeScanner","SpritesheetContext","Spritesheet","Image","setSprites","url","Promise","resolve","reject","img","onload","onerror","then","Sprite","undefined","panel","spritesheet","spritePosition","setSpritePosition","rows","col","getSpriteIndex","drawImage","pos","getSpriteTopLeft","Sensors","doSrsScan","doLrsScan","doTargetTorpedo","currentTarget","getBoundingClientRect","clientX","clientY","dest","doChangeHeading","Status","marginLeft","flexWrap","alignContent","marginTop","WarpControl","energyRequired","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.966930d2.chunk.js","sourcesContent":["import { IRect } from \"../interfaces\";\n\nexport const sum = (a: IRect, b: IRect): IRect => {\n    return {\n        x: a.x + b.x,\n        y: a.y + b.y\n    }\n}\n\nexport const diff = (a: IRect, b: IRect): IRect => {\n    return sum(a, negate(b))\n}\n\nexport const negate = (a: IRect): IRect => {\n    return {\n        x: -1 * a.x,\n        y: -1 * a.y\n    }\n}\n\nexport const magnitude = (a: IRect): number => {\n    return Math.sqrt(Math.pow(a.x, 2) + Math.pow(a.y, 2))\n}\n\nexport const scale = (a: IRect, scalar: number): IRect => {\n    return {\n        x: a.x * scalar,\n        y: a.y * scalar\n    }\n}\n\nexport const scaleXY = (a: IRect, b: IRect): IRect => {\n    return {\n        x: a.x * b.x,\n        y: a.y * b.y\n    }\n}\n\n// dot product\nexport const dot = (a: IRect, b: IRect): number => {\n    return a.x * b.x + a.y * b.y;\n}\n","import * as Convert from \"../convert\";\nimport { IPolar } from \"../interfaces\";\nimport * as Rect from './rect';\n\nexport const sum = (a: IPolar, b: IPolar): IPolar => {\n    const c = Convert.polar2rect(a);\n    const d = Convert.polar2rect(b);\n    return Convert.rect2polar(Rect.sum(c, d));\n}\n\nexport const diff = (a: IPolar, b: IPolar): IPolar => {\n    const c = Convert.polar2rect(a);\n    const d = Convert.polar2rect(b);\n    return Convert.rect2polar(Rect.diff(c, d));\n}\n\nexport const negation = (a: IPolar): IPolar => {\n    throw new Error('not implemented');\n}\n\nexport const magnitude = (a: IPolar): number => {\n    return a.r;\n}\n\nexport const scale = (a: IPolar, scalar: number): IPolar => {\n    return { ...a, r: a.r * scalar };\n}\n\n// dot product\nexport const dot = (a: IPolar, b: IPolar): number => {\n    const c = Convert.polar2rect(a);\n    const d = Convert.polar2rect(b);\n    return Rect.dot(c, d);\n}\n\nexport const distance = (a: IPolar, b: IPolar): number => {\n    const delta = diff(a, b).r\n    return Math.sign(delta) * delta\n}\n\n","import * as Polar from \"./polar\"\nimport * as Rect from './rect'\n\nconst Vector = {\n    Polar,\n    Rect\n}\n\nexport default Vector\n","import { IBounds, IPolar, IRect } from './interfaces'\nimport Vector from './vector'\n\nexport const deg2rad = (degree: number): number => {\n    return degree / 57.2958\n}\n\nexport const rad2deg = (radian: number): number => {\n    return radian * 57.2958\n}\n\nexport const rect2polar = (point: IRect): IPolar => {\n    return {\n        r: Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2)),\n        theta: point.y >= 0\n            ? Math.atan2(point.y, point.x)\n            : Math.atan2(point.y, point.x) + 2 * Math.PI,\n    }\n}\n\nexport const polar2rect = (point: IPolar): IRect => {\n    return {\n        x: point.r * Math.cos(point.theta),\n        y: point.r * Math.sin(point.theta),\n    }\n}\n\nexport const canvas2polar = (point: IRect, bounds: IBounds): IPolar => {\n    // translate to the cartesian plane\n    let p = Vector.Rect.diff(point, { x: bounds.width / 2, y: bounds.height / 2 })\n    // scale to the unit square and flip around the x-axis\n    p = Vector.Rect.scaleXY(p, { x: 1 / bounds.width * 2, y: 1 / bounds.height * -2 })\n    // convert to polar\n    return rect2polar(p)\n}\n\nexport const polar2canvas = (point: IPolar, bounds: IBounds): IRect => {\n    // convert to rect\n    let p = polar2rect(point)\n    // scale to the bounds\n    p = Vector.Rect.scaleXY(p, { x: bounds.width / 2, y: bounds.height / -2 })\n    // translate to the canvas coordinate space\n    p = Vector.Rect.sum(p, { x: bounds.width / 2, y: bounds.height / 2 })\n    return p\n}\n","export * from './cartography'\nexport * from './convert'\nexport * from './geometry'\nexport * from './initialization'\nexport * from './interfaces'\nexport * from './ship'\nexport * from './spriteSvc'\nexport * from './util'\nexport * from './vector'","import { createSectors, QUADRANT_NAMES, REGION_NAMES } from \"../cartography\";\nimport { IComms, IDamageControl, IEnemy, IPhasers, IPolar, IPositionable, ISector, ISensors, IShields, IShip, IStatus, ITorpedos, IWarp } from '../interfaces';\n\nconst START_ENERGY = 3000;\nconst START_PHOTON_TORPEDOES = 10;\nconst MIN_ENEMY_SHIELD_ENERGY = 100;\nconst MAX_ENEMY_SHIELD_ENERGY = 300;\nconst MIN_ENEMY_PHASER_FIRE = 50;\nconst MAX_ENEMY_PHASER_FIRE = 200;\nconst MAX_STARS_SECTOR = 9;\nconst MIN_ENEMYS_GALAXY = 7;\nconst MAX_ENEMYS_GALAXY = 28;\nconst MAX_STARBASES_GALAXY = 5;\nconst MIN_DAYS_MISSION = 15;\nconst MAX_DAYS_MISSION = 45;\nconst START_STAR_DATE = 3000;\n\n// create a random coordinate on the unit circle\nconst rndPosition = (): IPolar => {\n    return {\n        r: Math.random(),\n        theta: Math.random() * 2 * Math.PI\n    }\n}\n\nconst range = (n: number): Array<number> => {\n    return Array.from(Array(n).keys())\n}\n\nconst rndMinmax = (min: number, max: number): number => {\n    return Math.floor(min + Math.random() * (max - min));\n}\n\nconst createStar = (): IPositionable => {\n    return {\n        type: 'star',\n        position: rndPosition()\n    }\n}\n\nconst createBase = (): IPositionable => {\n    return {\n        type: 'base',\n        position: rndPosition()\n    }\n}\n\nconst createEnemy = (): IEnemy => {\n    return {\n        name: '',\n        type: 'enemy',\n        position: rndPosition(),\n        shields: rndMinmax(MIN_ENEMY_SHIELD_ENERGY, MAX_ENEMY_SHIELD_ENERGY),\n        phaser: rndMinmax(MIN_ENEMY_PHASER_FIRE, MAX_ENEMY_PHASER_FIRE)\n    }\n}\n\nexport const game = (): IPositionable[] => {\n    return range(rndMinmax(64, MAX_STARS_SECTOR * 16)).map(createStar)\n        .concat(range(rndMinmax(1, MAX_STARBASES_GALAXY)).map(createBase))\n        .concat(range(rndMinmax(MIN_ENEMYS_GALAXY, MAX_ENEMYS_GALAXY)).map(createEnemy));\n}\n\nexport const sectors = (): ISector[] => {\n    return createSectors(REGION_NAMES, QUADRANT_NAMES)\n}\n\nexport const ship = (): IShip => {\n    return {\n        type: 'friendly',\n        name: '',\n        position: rndPosition(),\n    };\n}\n\nexport const comms = (): IComms => {\n    return { log: [] }\n}\n\nexport const status = (): IStatus => {\n    return {\n        endDate: START_STAR_DATE + rndMinmax(MIN_DAYS_MISSION, MAX_DAYS_MISSION),\n        starDate: START_STAR_DATE,\n        alert: 'green'\n    }\n}\n\nexport const damage = (): IDamageControl => {\n    return {\n        srs: 0,\n        lrs: 0,\n        warp: 0,\n        shield: 0,\n        paaser: 0,\n        torpedo: 0,\n        damageControl: 0,\n        libraryComputer: 0,\n    }\n}\n\nexport const sensors = (): ISensors => {\n    return {\n        selected: 'srs',\n        sector: {\n            name: '',\n            inner: { r: 0, theta: 0 },\n            outer: { r: 0, theta: 0 }\n        },\n        sectors: sectors(),\n        srs: [],\n        lrs: []\n    }\n}\n\nexport const warp = (): IWarp => {\n    return {\n        energy: START_ENERGY,\n        heading: { r: 0, theta: 0 }\n    }\n}\n\nexport const shields = (): IShields => {\n    return { energy: 0 }\n}\n\nexport const torpedos = (): ITorpedos => {\n    return {\n        inventory: START_PHOTON_TORPEDOES,\n        target: { r: 0, theta: 0 }\n    }\n}\n\nexport const phasers = (): IPhasers => {\n    return { energy: 0 }\n}\n","import * as Init from './initialization'\n\nexport default Init","export const between = (lower: number, value: number, upper: number): boolean => {\n    return lower <= value && value < upper;\n}\n\nexport const clamp = (lower: number, value: number, upper: number): number => {\n    return value < lower ? lower : value > upper ? upper : value\n}","import Geometry from \"./geometry\";\nimport { IPositionable, ISector } from \"./interfaces\";\n\nexport const REGION_NAMES = [\n    'Aldebaran', 'Altair',\n    'Antares', 'Arcturus',\n    'Betelguse', 'Canapus',\n    'Capella', 'Deneb',\n    'Pollux', 'Procyon',\n    'Regulus', 'Rigel',\n    'Sagitarius', 'Sirus',\n    'Spica', 'Vega'\n]\n\nexport const QUADRANT_NAMES = [\n    \"I\",\n    \"II\",\n    \"III\",\n    \"IV\"\n]\n\n// radius of equal-area rings\n// see https://math.stackexchange.com/questions/270287/how-to-divide-a-circle-into-9-rings-1-inner-circle-with-the-same-area\nexport const createSectors = (regionNames: string[], quadrantNames: string[]): ISector[] => {\n    const quadrantWidth = 2 * Math.PI / regionNames.length;\n    return regionNames.map((rname, ridx) => quadrantNames.map((qname, qidx) => {\n        return {\n            name: `${rname} ${qname}`,\n            inner: {\n                r: Math.sqrt(qidx / 4),\n                theta: ridx * quadrantWidth\n            },\n            outer: {\n                r: Math.sqrt((qidx + 1) / 4),\n                theta: (ridx + 1) * quadrantWidth\n            }\n        }\n    }))\n        .reduce((prev, current) => prev.concat(current), []);\n}\n\nexport const getSectorByName = (sectors: ISector[], name: string): ISector => {\n    const sector = sectors.find(sector => sector.name === name);\n    if (!sector) throw new Error('invalid sector name');\n    return sector;\n}\n\nexport const getSectorContaining = (sectors: ISector[], obj: IPositionable): ISector => {\n    const sector = sectors.find(sector => Geometry.Polar.contains(sector, obj.position));\n    if (!sector) throw new Error('obj is not contained in a sector');\n    return sector;\n}\n","import { IBoundingArc, IBoundingCircle, IPolar } from '../interfaces';\nimport { between } from '../util';\nimport Vector from '../vector';\n\nexport const contains = (bounds: IBoundingArc, point: IPolar): boolean => {\n    return between(bounds.inner.r, point.r, bounds.outer.r)\n        && between(bounds.inner.theta, point.theta, bounds.outer.theta)\n}\n\nexport const within = (bounds: IBoundingCircle, point: IPolar): boolean => {\n    return distance(bounds.center, point) < bounds.radius;\n}\n\nexport const distance = (a: IPolar, b: IPolar): number => {\n    return Vector.Polar.magnitude(Vector.Polar.diff(a, b));\n}\n","import { IBoundingBox, IRect } from '../interfaces';\nimport { between } from '../util';\nimport Vector from '../vector';\n\nexport const contains = (bounds: IBoundingBox, point: IRect): boolean => {\n    return between(bounds.lowerLeft.x, point.x, bounds.upperRight.x)\n        && between(bounds.lowerLeft.y, point.y, bounds.upperRight.y)\n}\n\nexport const distance = (a: IRect, b: IRect): number => {\n    return Vector.Rect.magnitude(Vector.Rect.diff(a, b));\n}\n","import * as Polar from './polar';\nimport * as Rect from './rect';\n\nexport const Geometry = {\n    Polar,\n    Rect\n}\n\nexport default Geometry","import { getSectorContaining } from \"./cartography\";\nimport Geometry from \"./geometry\";\nimport { IDamageControl, IPolar, IPositionable, ISector, IShields, IShip } from \"./interfaces\";\nimport Vector from \"./vector\";\n\nconst SHIELD_EFFICIENCY = 0.15;\n\nconst clamp = (value: number): number => {\n    if (value < 0) {\n        return 0;\n    } else if (value > 1.0) {\n        return 1.0;\n    } else {\n        return value;\n    }\n}\n\n// functions to change ship state initiated by the player\nexport const repairDamage = (damage: IDamageControl, repairs: number): IDamageControl => {\n    Object.keys(damage.status).forEach(system => {\n        damage[system] -= repairs;\n        damage[system] = clamp(damage[system]);\n    });\n\n    return { ...damage };\n}\n\nexport const repairAllDamage = (damage: IDamageControl): IDamageControl => {\n    return repairDamage(damage, 1.0);\n}\n\nexport const warp = (ship: IShip, heading: IPolar): IShip => {\n    const position = Vector.Polar.sum(ship.position, heading);\n\n    return { ...ship, position };\n}\n\nexport const shortRangeScan = (objs: IPositionable[], ship: IShip, sectors: ISector[]): IPositionable[] => {\n    const sector = getSectorContaining(sectors, ship);\n    return objs.filter(obj => Geometry.Polar.contains(sector, obj.position))\n}\n\nexport const longRangeScan = (objs: IPositionable[], ship: IShip, radius: number): IPositionable[] => {\n    return objs.filter(obj => Geometry.Polar.within({ center: ship.position, radius: radius }, obj.position))\n}\n\n// handleX() functions change the ship state initiated by outside events\nexport const handleEnergyHit = (shields: IShields, damage: IDamageControl, energyHit: number): [IShields, IDamageControl] => {\n\n    if (energyHit > shields.energy * SHIELD_EFFICIENCY) {\n        const systems = Object.keys(damage);\n        const system = systems[Math.floor(Math.random() * systems.length)];\n        damage[system] += Math.random();\n        damage[system] = clamp(damage[system]);\n    }\n    shields.energy -= energyHit; // ship is destroyed when shields < 0\n\n    return [{ ...shields }, { ...damage }]\n}\n","import Vector from './vector'\n\nconst props = {\n    srs: {\n        friendly: { index: 0, scale: 0.7, zIndex: 2400 },\n        enemy: { index: 1, scale: 0.5, zIndex: 2300 },\n        base: { index: 2, scale: 0.5, zIndex: 2200 },\n        star: { index: 3, scale: 0.3, zIndex: 2100 }\n    },\n    lrs: {\n        friendly: { index: 0, scale: 0.6, zIndex: 2400 },\n        enemy: { index: 1, scale: 0.4, zIndex: 2300 },\n        base: { index: 2, scale: 0.4, zIndex: 2200 },\n        star: { index: 3, scale: 0.2, zIndex: 2100 }\n    }\n}\n\nexport const spritePropsFactory = {\n    srs: (sensors, ship) => {\n\n        const translate = sector2translation(sensors.sector)\n\n        return [{ ...props.srs.friendly, ...ship, position: translate(ship.position), data: ship.position }].concat(sensors.srs.map(o => ({ ...props.srs[o.type], ...o, position: translate(o.position), data: o.position })))\n    },\n    lrs: (sensors, ship) => {\n        return [{ ...props.lrs.friendly, data: ship.position, ...ship }].concat(sensors.lrs.map(o => ({ ...props.lrs[o.type], ...o })))\n    }\n}\n\nexport const sector2translation = sector => {\n    const center = centerOfSector(sector)\n    const rotatedCenter = rotate(center, center)\n    // functional pipes are looking pretty good right about now\n    return point => scale(depthOfSector(sector), translate(rotatedCenter, rotate(center, { ...point })))\n}\n\n\nexport const centerOfSector = ({ inner, outer }) => ({ r: (outer.r - inner.r) / 2 + inner.r, theta: (outer.theta - inner.theta) / 2 + inner.theta })\n\nexport const depthOfSector = ({ inner, outer }) => outer.r - inner.r\n\nexport const rotate = (center, point) => (\n    {\n        ...point,\n        theta: point.theta + 5 / 2 * Math.PI - center.theta - 2 * Math.PI\n    }\n)\n\nexport const translate = (center, point) => Vector.Polar.diff(point, center)\n\nexport const scale = (depth, point) => (\n    {\n        ...point,\n        r: point.r * 2 / depth\n    }\n)","module.exports = __webpack_public_path__ + \"static/media/spritesheet.94c563f0.png\";","import React from 'react'\n\nconst format = (value, precision) => typeof (value) === 'number' ? value.toFixed(precision) : value\n\nexport const ControlBox = ({ children }) => {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', marginBottom: '1.5rem' }}>\n            {children}\n        </div>\n    )\n}\n\nexport const NumberControl = ({ title, onChange = () => { }, ...rest }) => {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n            <p>{title}</p>\n            <input type='number' onChange={e => onChange(Number.parseFloat(e.target.value))} {...rest} />\n        </div>\n    )\n}\n\nexport const RangeControl = ({ title, onChange = () => { }, ...rest }) => {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n            <input orient='vertical' type='range' onChange={e => onChange(Number.parseFloat(e.target.value))} {...rest} />\n        </div>\n    )\n}\n\nexport const DisplayControl = ({ title, value, precision = 0, ...rest }) => {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n            <p style={{ margin: 0 }}>{title}</p>\n            <p style={{ margin: 0 }}>&nbsp;&nbsp;</p>\n            <p style={{ margin: 0 }}>{format(value, precision)}</p>\n        </div>\n    )\n}\n\nexport const AnnunciatorControl = ({ title, value, ...rest }) => {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n            <p style={{ margin: 0 }}>{title}</p>\n            <p style={{ margin: 0 }}>&nbsp;&nbsp;</p>\n            <p style={{ margin: 0, backgroundColor: value, height: '1.5rem', width: '4rem', border: 'none', borderRadius: '16px 16px 16px 16px' }} />\n        </div>\n    )\n}","import React from 'react';\n\nconst styles = {\n    title: {\n        position: 'absolute',\n        right: '1rem',\n        zIndex: 1000\n    },\n    subtitle: {\n        position: 'absolute',\n        top: '90%',\n        right: '1rem'\n    },\n    frame: {\n        border: '1rem solid gray',\n        borderRadius: '2rem',\n        position: 'relative'\n    },\n    justify: {\n        center: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center'\n        },\n        left: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-start'\n        }\n    },\n    top: {\n        borderBottom: 'none',\n        borderRight: 'none'\n    },\n    bottom: {\n        borderTop: 'none',\n        borderRight: 'none'\n    },\n    left: {\n        borderRight: 'none'\n    },\n    right: {\n        borderLeft: 'none'\n    },\n    bracket: {\n        borderTop: 'none',\n        borderBottom: 'none'\n    },\n    buttonBar: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        position: 'absolute',\n        left: 0,\n        top: 25\n    },\n    button: {\n        border: 'none',\n        borderRadius: '0px 16px 16px 0px',\n        marginBottom: '16px',\n        height: '2rem',\n        width: '5rem',\n        display: 'block',\n        cursor: 'pointer',\n        zIndex: 2000\n    }\n}\n\nconst getStyles = type => {\n    return type ? { ...styles.frame, ...styles[type] } : { ...styles.frame, ...styles.left };\n}\n\nexport const Frame = ({ type, children, justify = 'center', ...rest }) => {\n    return (\n        <div style={{ ...getStyles(type), ...styles.justify[justify] }} {...rest}>\n            {children}\n        </div>\n    );\n}\n\nexport const FrameTitle = ({ title: text, ...rest }) => {\n    return (\n        <div style={styles.title} {...rest}>{text}</div>\n    )\n}\n\nexport const FrameButtonBar = ({ children, ...rest }) => {\n    return (\n        <div style={styles.buttonBar} {...rest}>{children}</div>\n    )\n}\n\nexport const FrameButton = ({ onClick, text, ...rest }) => {\n    return (\n        <button onClick={onClick} style={styles.button} {...rest}>{text}</button>\n    )\n}\n\nexport const FrameSubtitle = ({ text, ...rest }) => {\n    return (\n        <div style={styles.subtitle} {...rest}>{text}</div>\n    )\n}\n","import { clamp } from \"../util\";\n\nexport const game = (state, action) => {\n  switch (action.type) {\n    case \"remove-item\":\n      state.splice(state.indexOf(action.payload), 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const ship = (state, action) => {\n  switch (action.type) {\n    case \"new-position\":\n      return { ...state, position: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const comms = (state, action) => {\n  switch (action.type) {\n    case \"set\":\n      return { log: action.payload };\n    case \"log-message\":\n      return { log: [action.payload, ...state.log] };\n    default:\n      return state;\n  }\n};\n\nexport const damage = (state, action) => {\n  switch (action.type) {\n    case \"repair-all\":\n      return {\n        srs: 0,\n        lrs: 0,\n        warp: 0,\n        shield: 0,\n        paaser: 0,\n        torpedo: 0,\n        damageControl: 0,\n        libraryComputer: 0,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const warp = (state, action) => {\n  switch (action.type) {\n    case \"new-heading\":\n      return { ...state, heading: action.payload };\n    case \"store-energy\":\n      return { ...state, energy: action.payload };\n    case \"deplete-energy\":\n      return {\n        ...state,\n        energy: clamp(0, state.energy - action.payload, state.energy),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const shield = (state, action) => {\n  switch (action.type) {\n    case \"store-energy\":\n      return { ...state, energy: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const torpedo = (state, action) => {\n  switch (action.type) {\n    case \"set-target\":\n      return { ...state, target: action.payload };\n    case \"dec-inventory\":\n      return {\n        ...state,\n        inventory: state.inventory > 0 ? state.inventory - 1 : state.inventory,\n      };\n    case \"set-inventory\":\n      return { ...state, inventory: action.payload };\n    case \"clear-target\":\n      return { ...state, target: { r: 0, theta: 0 } };\n    default:\n      return state;\n  }\n};\n\nexport const phaser = (state, action) => {\n  switch (action.type) {\n    case \"store-energy\":\n      return { ...state, energy: action.payload };\n    default:\n      return state;\n  }\n};\n","import { longRangeScan, shortRangeScan } from \"..\"\n\nexport const sensor = (state, action) => {\n    switch (action.type) {\n        case 'store-sector':\n            return { ...state, sector: action.payload }\n        case 'srs-scan': {\n            const { game, ship } = action.payload\n            const objs = shortRangeScan(game, ship, state.sectors)\n            return { ...state, srs: objs, selected: 'srs' }\n        }\n        case 'lrs-scan': {\n            const { game, ship } = action.payload\n            const objs = longRangeScan(game, ship, 0.3)\n            const data = new Set(state.lrs.concat(objs))\n            return { ...state, lrs: Array.from(data.values()), selected: 'lrs' }\n        }\n        case 'remove-item':\n            let srs = [...state.srs]\n            let lrs = [...state.lrs]\n            srs.splice(srs.indexOf(action.payload), 1)\n            lrs.splice(lrs.indexOf(action.payload), 1)\n            return { ...state, srs, lrs }\n        default:\n            return state\n    }\n}","const TIME_FACTOR = 10\n\nexport const status = (state, action) => {\n    switch (action.type) {\n        case 'inc-stardate':\n            return ({ ...state, starDate: state.starDate + TIME_FACTOR * action.payload })\n        case 'set-alert':\n            return ({ ...state, alert: action.payload })\n        default:\n            return state\n    }\n}","import React, { createContext, useContext, useReducer } from 'react';\nimport Init from '../services/initialization';\nimport * as Reducers from '../services/reducers/reducers';\nimport { sensor } from '../services/reducers/sensors'\nimport { status } from '../services/reducers/status'\n\nexport const Context = createContext()\n\nconst useGameState = key => useContext(Context)[key][0]\n\nexport const useGame = () => useGameState('game')\nexport const useShip = () => useGameState('ship')\nexport const useComms = () => useGameState('comms')\nexport const useDamage = () => useGameState('damage')\nexport const useStatus = () => useGameState('status')\nexport const useSensors = () => useGameState('sensors')\nexport const useWarp = () => useGameState('warp')\nexport const useShields = () => useGameState('shields')\nexport const useTorpedos = () => useGameState('torpedos')\nexport const usePhasers = () => useGameState('phasers')\n\nexport const useDispatch = () => {\n    const ctx = useContext(Context)\n    return ({ sys, type, payload }) => ctx[sys][1]({ type, payload })\n}\n\nexport const StoreProvider = ({ children }) => {\n    const store = {\n        game: useReducer(Reducers.game, Init.game()),\n        ship: useReducer(Reducers.ship, Init.ship()),\n        comms: useReducer(Reducers.comms, Init.comms()),\n        damage: useReducer(Reducers.damage, Init.damage()),\n        status: useReducer(status, Init.status()),\n        sensors: useReducer(sensor, Init.sensors()),\n        warp: useReducer(Reducers.warp, Init.warp()),\n        shields: useReducer(Reducers.shield, Init.shields()),\n        torpedos: useReducer(Reducers.torpedo, Init.torpedos()),\n        phasers: useReducer(Reducers.phaser, Init.phasers())\n    }\n\n    return (\n        <Context.Provider value={store} >\n            {children}\n        </Context.Provider >\n    )\n}","import React, { Fragment } from 'react'\nimport Vector from '../services/vector'\nimport { ControlBox, DisplayControl, RangeControl } from './controls'\nimport { FrameButton, FrameButtonBar } from './frame'\nimport { useDispatch, usePhasers, useSensors, useShip, useWarp } from './store'\n\nconst SHIELD_EFFICIENCY = 0.15\nconst SCALE_FACTOR = 10e-2\n\nexport const PhaserControl = props => {\n    const sensor = useSensors()\n    const phasers = usePhasers()\n    const warp = useWarp()\n    const ship = useShip()\n    const dispatch = useDispatch()\n\n    const onclick = e => {\n        const targets = sensor.srs.filter(o => o.type === 'enemy')\n        targets.forEach(target => {\n            let hit = phasers.energy / Vector.Polar.distance(target.position, ship.position) * SCALE_FACTOR\n            dispatch({ sys: 'comms', type: 'log-message', payload: `SPOCK: ${hit.toFixed(2)} unit hit on target vessel.` })\n            dispatch({ sys: 'warp', type: 'deplete-energy', payload: phasers.energy })\n            if (hit > SHIELD_EFFICIENCY * target.shields) {\n                target.shields -= hit\n            }\n            if (target.shields <= 0) {\n                dispatch({ sys: 'game', type: 'remove-item', payload: target })\n                dispatch({ sys: 'sensors', type: 'remove-item', payload: target })\n                dispatch({ sys: 'comms', type: 'log-message', payload: 'CHEKOV: Enemy wessel destroyed.' })\n            } else {\n                dispatch({ sys: 'comms', type: 'log-message', payload: `SPOCK: Target shields are at ${target.shields.toFixed(0)}.` })\n            }\n        })\n    }\n\n    const handleInput = e => {\n        const value = Number.parseFloat(e.target.value)\n        let available = warp.energy + phasers.energy\n        if (value <= available) {\n            available -= value\n            dispatch({ sys: 'warp', type: 'store-energy', payload: available })\n            dispatch({ sys: 'phasers', type: 'store-energy', payload: value })\n        }\n    }\n\n    return (\n        <Fragment>\n            <FrameButtonBar>\n                <FrameButton className='lcars-tamarillo-bg' text='Fire' disabled={sensor.selected !== 'srs'} onClick={onclick} />\n            </FrameButtonBar>\n            <ControlBox>\n                <RangeControl min={0} max={500} value={phasers.energy} onInput={handleInput} />\n                <DisplayControl title='Energy' value={phasers.energy} />\n            </ControlBox>\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react'\nimport { ControlBox, DisplayControl, RangeControl } from './controls'\nimport { useShields, useWarp, useDispatch } from './store'\n\n\nexport const ShieldControl = props => {\n    const shields = useShields()\n    const warp = useWarp()\n    const dispatch = useDispatch()\n\n    const handleInput = e => {\n        const value = Number.parseFloat(e.target.value)\n        let available = warp.energy + shields.energy\n        if (value <= available) {\n            available -= value\n            dispatch({ sys: 'warp', type: 'store-energy', payload: available })\n            dispatch({ sys: 'shields', type: 'store-energy', payload: value })\n        }\n    }\n\n    return (\n        <Fragment>\n            <ControlBox>\n                <RangeControl min={0} max={500} value={shields.energy} onInput={handleInput} />\n                <DisplayControl title='Energy' value={shields.energy} />\n            </ControlBox>\n        </Fragment>\n    )\n}","import React, { Fragment, useEffect, useState } from 'react'\nimport Vector from '../services/vector'\nimport { ControlBox, DisplayControl } from './controls'\nimport { FrameButton, FrameButtonBar } from './frame'\nimport { useDispatch, useSensors, useShip, useTorpedos } from './store'\n\nexport const TorpedoControl = props => {\n    const dispatch = useDispatch()\n    const torpedo = useTorpedos()\n    const sensor = useSensors()\n    const ship = useShip()\n    const [bearing, setBearing] = useState({ r: 0, theta: 0 })\n\n    useEffect(() => {\n        if (torpedo.target.r === 0 && torpedo.target.theta === 0) {\n            setBearing({ r: 0, theta: 0 })\n        } else {\n            setBearing(Vector.Polar.diff(ship.position, torpedo.target))\n        }\n    }, [torpedo.target, ship.position]);\n\n    const onClick = e => {\n        if (torpedo.inventory > 0) {\n            const target = sensor.srs.find(o => torpedo.target.r === o.position.r && torpedo.target.theta === o.position.theta)\n            dispatch({ sys: 'torpedos', type: 'dec-inventory', payload: '' })\n            dispatch({ sys: 'torpedos', type: 'clear-target', payload: '' })\n            switch (target.type) {\n                case 'base':\n                    dispatch({ sys: 'game', type: 'remove-item', payload: target })\n                    dispatch({ sys: 'sensors', type: 'remove-item', payload: target })\n                    dispatch({ sys: 'comms', type: 'log-message', payload: 'CHEKOV: Direct hit on the starbase!' })\n                    break;\n                case 'enemy':\n                    dispatch({ sys: 'game', type: 'remove-item', payload: target })\n                    dispatch({ sys: 'sensors', type: 'remove-item', payload: target })\n                    dispatch({ sys: 'comms', type: 'log-message', payload: 'CHEKOV: Enemy wessel destroyed.' })\n                    break;\n                case 'star':\n                    dispatch({ sys: 'comms', type: 'log-message', payload: 'CHEKOV: The star absorbed the energy of the torpedo.' })\n                    break;\n                default:\n                    // no-op\n                    break;\n            }\n        } else {\n            dispatch({ sys: 'comms', type: 'log-message', payload: 'CHEKOV: We have no torpedos left!' })\n        }\n    }\n\n    return (\n        <Fragment>\n            <FrameButtonBar>\n                <FrameButton className='lcars-tamarillo-bg' text='Launch' disabled={sensor.selected !== 'srs'} onClick={onClick} />\n            </FrameButtonBar>\n            <ControlBox>\n                <DisplayControl title='Inventory' value={torpedo.inventory} />\n                <DisplayControl title='Range' value={bearing.r} precision={3} />\n                <DisplayControl title='Bearing' value={bearing.theta} precision={3} />\n            </ControlBox>\n        </Fragment>\n    )\n}","import React, { useEffect } from \"react\";\r\nimport { Comms, Frame, FrameTitle, Sensors, Status, WarpControl } from \".\";\r\nimport { PhaserControl } from \"./phasers\";\r\nimport { ShieldControl } from \"./shields\";\r\nimport { useDispatch, useGame, useShip } from \"./store\";\r\nimport { TorpedoControl } from \"./torpedos\";\r\n\r\nexport const Bridge = (props) => {\r\n  const game = useGame();\r\n  const ship = useShip();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ sys: \"sensors\", type: \"srs-scan\", payload: { game, ship } });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bridge\">\r\n      <Frame\r\n        className=\"comms lcars-atomic-tangerine-border\"\r\n        type=\"bottom\"\r\n        justify=\"left\"\r\n      >\r\n        <FrameTitle title=\"Comms\" className=\"lcars-atomic-tangerine-color\" />\r\n        <Comms />\r\n      </Frame>\r\n\r\n      <Frame\r\n        className=\"status lcars-atomic-tangerine-border\"\r\n        type=\"bottom\"\r\n        justify=\"left\"\r\n      >\r\n        <FrameTitle title=\"Status\" className=\"lcars-atomic-tangerine-color\" />\r\n        <Status />\r\n      </Frame>\r\n\r\n      <Frame className=\"sensors lcars-atomic-tangerine-border\" type=\"bracket\">\r\n        <FrameTitle title=\"Sciences\" className=\"lcars-atomic-tangerine-color\" />\r\n        <Sensors />\r\n      </Frame>\r\n\r\n      <Frame className=\"shields lcars-atomic-tangerine-border\" type=\"left\">\r\n        <FrameTitle title=\"Shields\" className=\"lcars-atomic-tangerine-color\" />\r\n        <ShieldControl />\r\n      </Frame>\r\n\r\n      <Frame className=\"warp lcars-atomic-tangerine-border\" type=\"left\">\r\n        <FrameTitle\r\n          title=\"Drive\"\r\n          className=\"lcars-atomic-tangerine-color\"\r\n        />\r\n        <WarpControl />\r\n      </Frame>\r\n\r\n      <Frame className=\"phasers lcars-atomic-tangerine-border\" type=\"top\">\r\n        <FrameTitle title=\"Phasers\" className=\"lcars-atomic-tangerine-color\" />\r\n        <PhaserControl />\r\n      </Frame>\r\n\r\n      <Frame className=\"torpedos lcars-atomic-tangerine-border\" type=\"top\">\r\n        <FrameTitle\r\n          title=\"Torpedos\"\r\n          className=\"lcars-atomic-tangerine-color\"\r\n        />\r\n        <TorpedoControl />\r\n      </Frame>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\n\nexport const CelContext = React.createContext({ width: 300, height: 150 });\n\nexport const CelPanel = ({ height, width, init = () => { }, children }) => {\n\n    return (\n        <CelContext.Provider value={{ height, width, init }}>\n            <div style={{ position: 'relative', height, width }}>\n                {children}\n            </div>\n        </CelContext.Provider>\n    );\n}\n\nexport const Cel = ({ draw, polar = false, onClick = () => { } }) => {\n    const ref = React.createRef();\n\n    useEffect(() => {\n        const ctx = ref.current.getContext('2d');\n        if (polar) ctx.translate(ctx.canvas.width / 2, ctx.canvas.height / 2);\n        draw(ctx);\n    }, [])\n\n    return (\n        <CelContext.Consumer>\n            {({ height, width }) => {\n                return (\n                    <canvas style={{ position: 'absolute', top: 0, left: 0 }}\n                        height={height}\n                        width={width}\n                        ref={ref}\n                        onClick={onClick}>\n                    </canvas>\n                );\n            }}\n        </CelContext.Consumer>\n    );\n}\n\n","export const color = {\n    paleCanary: '#ff9',\n    goldenTanoi: '#fc6',\n    neonCarrot: '#f93',\n    eggplant: '#646',\n    lilac: '#c9c',\n    anakiwa: '#9cf',\n    mariner: '#36c',\n    bahamaBlue: '#069',\n    blueBell: '#99c',\n    melrose: '#99f',\n    hopBush: '#c69',\n    chestnutRose: '#c66',\n    orangePeel: '#f96',\n    atomicTangerine: '#f90',\n    danub: '#68c',\n    indigo: '#45b',\n    lavenderPurple: '#97a',\n    cosmic: '#746',\n    redDamask: '#d64',\n    mediumCarmine: '#a53',\n    bourbon: '#b62',\n    sandyBrown: '#e95',\n    husk: '#ba5',\n    rust: '#b41',\n    tamarillo: '#821'\n}\n\nexport const colors = Object.values(color);","import React from \"react\";\nimport { useComms } from \"./store\";\nimport \"../styles/comms.css\";\n\nexport const Comms = (props) => {\n  const comms = useComms();\n\n  return (\n    <div className=\"commsDisplay\">\n      {comms.log.map((m) => (\n        <div>{m}</div>\n      ))}\n    </div>\n  );\n};\n","import React, { Fragment, useEffect } from \"react\";\nimport { getSectorContaining, shortRangeScan } from \"../services\";\nimport { useDispatch, useGame, useSensors, useShip } from \"./store\";\n\nexport const Game = ({ children }) => {\n  const ship = useShip();\n  const game = useGame();\n  const sensors = useSensors();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const sector = getSectorContaining(sensors.sectors, ship);\n    dispatch({ sys: \"sensors\", type: \"store-sector\", payload: sector });\n  }, [ship.position]);\n\n  useEffect(() => {\n    const objs = shortRangeScan(game, ship, sensors.sectors);\n    if (objs.filter((o) => o.type === \"base\").length > 0) {\n      dispatch({\n        sys: \"comms\",\n        type: \"log-message\",\n        payload: \"UHURU: Starbase reports refitting complete.\",\n      });\n      dispatch({ sys: \"damage\", type: \"repair-all\" });\n      dispatch({ sys: \"torpedos\", type: \"set-inventory\", payload: 10 });\n      dispatch({ sys: \"warp\", type: \"store-energy\", payload: 3000 });\n    }\n  }, [sensors.sector]);\n\n  useEffect(() => {\n    const objs = shortRangeScan(game, ship, sensors.sectors);\n    if (objs.filter((o) => o.type === \"enemy\").length > 0) {\n      dispatch({\n        sys: \"comms\",\n        type: \"log-message\",\n        payload: \"CHEKOV: Enemy wessels detected.\",\n      });\n      dispatch({ sys: \"status\", type: \"set-alert\", payload: \"red\" });\n    }\n  }, [sensors.sector]);\n\n  useEffect(() => {\n    const objs = shortRangeScan(game, ship, sensors.sectors);\n    if (objs.filter((o) => o.type === \"enemy\").length === 0) {\n      dispatch({ sys: \"status\", type: \"set-alert\", payload: \"green\" });\n    }\n  }, [sensors.srs]);\n\n  useEffect(() => {\n    [\n      \"SPOCK: Captain on deck.\",\n      \"SCOTT: The warp core is'a not feeling well!\",\n      \"MCCOY: Spock, you green-blooded, pointy-eared...\",\n      \"SPOCK: Doctor McCoy, I raise my eybrows at you.\",\n      \"SCOTT: Is'a no one listening? The warp core is aboot to breach!\",\n      \"MCCOY: Damn it, Scotty! I'm a doctor, not an engineer!\",\n    ].forEach((m, idx) =>\n      setTimeout(\n        () => dispatch({ sys: \"comms\", type: \"log-message\", payload: m }),\n        2000 * idx\n      )\n    );\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n};\n","import React, { Fragment } from \"react\";\nimport { Cel, colors, Spritesheet } from \".\";\nimport sprites from './spritesheet.png'\n\nconst grid = {\n  lrs: (ctx) => {\n    const arc = (2 * Math.PI) / 16;\n    ctx.strokeStyle = \"none\";\n    for (let i = 0; i < 16; i++) {\n      const color = colors[i % 16];\n      ctx.moveTo(0, 0);\n      ctx.beginPath();\n      ctx.arc(0, 0, ctx.canvas.width / 2, i * arc, (i + 1) * arc);\n      ctx.lineTo(0, 0);\n      ctx.fillStyle = color + \"c\";\n      ctx.fill();\n    }\n    ctx.strokeStyle = \"lightgray\";\n    for (let i = 1; i <= 4; i++) {\n      const r = (ctx.canvas.width / 2) * Math.sqrt(i / 4);\n      ctx.beginPath();\n      ctx.arc(0, 0, r, 0, 2 * Math.PI);\n      ctx.closePath();\n      ctx.stroke();\n    }\n  },\n  srs: (ctx) => {\n    ctx.strokeStyle = \"lightgray\";\n    for (let i = 1; i <= 4; i++) {\n      ctx.beginPath();\n      ctx.arc(0, 0, ctx.canvas.width * i * 0.125, 0, 2 * Math.PI);\n      ctx.closePath();\n      ctx.stroke();\n    }\n  },\n};\n\nconst Scanner = ({ children, draw, onclick }) => {\n  return (\n    <Fragment>\n      <Cel draw={draw} polar onClick={onclick} />\n      <Spritesheet\n        src={sprites}\n        size={50}\n      >\n        {children}\n      </Spritesheet>\n    </Fragment>\n  );\n};\n\nexport const ShortRangeScanner = (props) => {\n  return <Scanner {...props} draw={grid.srs} />;\n};\n\nexport const LongRangeScanner = (props) => {\n  return <Scanner {...props} draw={grid.lrs} />;\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport * as Convert from '../services/convert';\nimport Vector from '../services/vector'\nimport { CelContext } from './cel';\n\nconst loadImage = url => {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.src = url;\n    })\n}\n\nconst getSpriteIndex = (index, size, height, width) => {\n    // sprites are stored in the sheet in row-major order \n    // and are 0-indexed\n    const cols = width / size;\n    const rows = height / size;\n    const col = index % cols;\n    const row = Math.floor((index - col) / rows);\n\n    return {\n        x: col * size,\n        y: row * size\n    };\n}\n\nconst getSpriteTopLeft = (position, bounds, size) => {\n    let pos = Convert.polar2canvas(position, bounds)\n\n    // adjust to the center of the sprite\n    pos = Vector.Rect.diff(pos, { x: size / 2, y: size / 2 })\n\n    return { top: pos.y, left: pos.x }\n}\n\nexport const SpritesheetContext = createContext(null);\n\nexport const Spritesheet = ({ src, size = 50, children }) => {\n    const [sprites, setSprites] = useState(new Image());\n    useEffect(() => {\n        loadImage(src).then(setSprites);\n    }, [src])\n\n    return (\n        <SpritesheetContext.Provider value={{ sprites, size }}>\n            {children}\n        </SpritesheetContext.Provider>\n    )\n}\n\nexport const Sprite = ({ name = '[...]', position, scale = 1.0, index = 0, zIndex = 2000, data = null, onclick = undefined }) => {\n    const ref = React.createRef()\n    const panel = React.useContext(CelContext)\n    const spritesheet = React.useContext(SpritesheetContext)\n    const [spritePosition, setSpritePosition] = useState({ top: 0, left: 0 })\n\n    const size = scale * spritesheet.size;\n\n    useEffect(() => {\n        // draw the sprite\n        const { x, y } = getSpriteIndex(index, spritesheet.size, spritesheet.sprites.width, spritesheet.sprites.height)\n        const ctx = ref.current.getContext('2d')\n        ctx.drawImage(spritesheet.sprites, x, y, spritesheet.size, spritesheet.size, 0, 0, size, size)\n        // set the position in the container\n        setSpritePosition(getSpriteTopLeft(position, panel, size))\n    }, [spritesheet, position, scale, index, zIndex])\n\n    const handleClick = () => {\n        if (onclick) onclick(data)\n    }\n\n    return (\n        <canvas style={{ position: 'absolute', ...spritePosition, zIndex }}\n            height={size}\n            width={size}\n            title={name}\n            onClick={handleClick}\n            ref={ref}>\n        </canvas>\n    );\n}\n","import React, { Fragment } from 'react'\nimport { spritePropsFactory } from '../services'\nimport { doChangeHeading, doLrsScan, doSrsScan, doTargetTorpedo } from '../services/actions'\nimport { CelPanel } from './cel'\nimport { FrameButton, FrameButtonBar, FrameSubtitle } from './frame'\nimport { LongRangeScanner, ShortRangeScanner } from './scanners'\nimport { Sprite } from './sprite'\nimport { useDispatch, useGame, useSensors, useShip } from './store'\n\nexport const Sensors = props => {\n    const sensors = useSensors()\n    const game = useGame()\n    const ship = useShip()\n    const dispatch = useDispatch()\n\n    return (\n        <Fragment>\n            <FrameSubtitle text={sensors.sector.name} />\n            <FrameButtonBar>\n                <FrameButton onClick={() => dispatch(doSrsScan(game, ship, sensors))} className='lcars-hopbush-bg' text='SRS' />\n                <FrameButton onClick={() => dispatch(doLrsScan(game, ship))} className='lcars-hopbush-bg' text='LRS' />\n            </FrameButtonBar>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                <CelPanel height={450} width={450} >\n                    {sensors.selected === 'srs'\n                        ? <ShortRangeScanner>\n                            {spritePropsFactory.srs(sensors, ship).map(p => <Sprite {...p} onclick={target => dispatch(doTargetTorpedo(target))} />)}\n                        </ShortRangeScanner>\n                        : <LongRangeScanner onclick={e => dispatch(doChangeHeading(e, ship.position))} >\n                            {spritePropsFactory.lrs(sensors, ship).map(p => <Sprite {...p} />)}\n                        </LongRangeScanner>\n                    }\n                </CelPanel>\n            </div>\n        </Fragment >\n    )\n}","import { IAction, IPositionable, IShip, ISensors } from '../interfaces'\n\nexport const doSrsScan = (game: IPositionable[], ship: IShip, sensors: ISensors): IAction => {\n    return { sys: 'sensors', type: 'srs-scan', payload: { game, ship, sensors } }\n}\n\nexport const doLrsScan = (game: IPositionable[], ship: IShip): IAction => {\n    return { sys: 'sensors', type: 'lrs-scan', payload: { game, ship } }\n}\n","import { IAction, IPolar } from '../interfaces'\n\nexport const doTargetTorpedo = (target: IPolar): IAction => {\n    return { sys: 'torpedos', type: 'set-target', payload: target }\n}\n","import { IAction, IPolar } from '../interfaces'\nimport * as Convert from '../convert'\nimport Vector from '../vector'\n\nexport const doChangeHeading = (e: any, target: IPolar): IAction => {\n    const bounds = e.currentTarget.getBoundingClientRect()\n    let point = { x: e.clientX - bounds.left, y: e.clientY - bounds.top }\n    const dest = Convert.canvas2polar(point, bounds)\n\n    return { sys: 'warp', type: 'new-heading', payload: Vector.Polar.diff(dest, target) }\n}\n","import React from 'react'\nimport { AnnunciatorControl, DisplayControl } from './controls'\nimport { useStatus } from './store'\n\nexport const Status = props => {\n    const status = useStatus()\n\n    return (\n        <div style={{ marginLeft: '1rem', display: 'flex', flexDirection: 'column', flexWrap: 'wrap', alignContent: 'space-between', marginTop: '1rem' }}>\n            <DisplayControl title='Star Date' value={status.starDate} precision={1} />\n            <DisplayControl title='Mission Date' value={status.endDate} precision={1} />\n            <AnnunciatorControl title='Tactical' value={status.alert} />\n        </div>\n    )\n}","import React, { Fragment } from 'react'\nimport { getSectorContaining } from '../services'\nimport Vector from '../services/vector'\nimport { ControlBox, DisplayControl } from './controls'\nimport { FrameButton, FrameButtonBar } from './frame'\nimport { useDispatch, useSensors, useShip, useWarp } from './store'\n\nconst ENERGY_PER_UNIT = 1000\n\nexport const WarpControl = props => {\n    const sensor = useSensors()\n    const ship = useShip()\n    const warp = useWarp()\n    const dispatch = useDispatch()\n\n    const engageClicked = () => {\n        const energyRequired = ENERGY_PER_UNIT * warp.heading.r\n        if (warp.energy >= energyRequired) {\n            const position = Vector.Polar.sum(ship.position, warp.heading)\n            const sector = getSectorContaining(sensor.sectors, { ...ship, position })\n            dispatch({ sys: 'ship', type: 'new-position', payload: position })\n            dispatch({ sys: 'sensors', type: 'store-sector', payload: sector })\n            dispatch({ sys: 'warp', type: 'store-energy', payload: warp.energy - energyRequired })\n            dispatch({ sys: 'status', type: 'inc-stardate', payload: warp.heading.r })\n        } else {\n            dispatch({ sys: 'comms', type: 'log-message', payload: \"SCOTT: We do'na have the energy for this manuever.\" })\n        }\n    }\n\n    return (\n        <Fragment>\n            <FrameButtonBar>\n                <FrameButton className='lcars-dodger-blue-bg' text='Engage' onClick={engageClicked} disabled={sensor.selected === 'srs'} />\n            </FrameButtonBar>\n            <ControlBox>\n                <DisplayControl title='Energy' value={warp.energy} />\n                <DisplayControl title='Warp Factor' value={warp.heading.r} precision={3} />\n                <DisplayControl title='Heading' value={warp.heading.theta} precision={3} />\n            </ControlBox>\n        </Fragment>\n    )\n}","import React from 'react'\nimport { Bridge, StoreProvider, Game } from './components'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <StoreProvider>\n        <Game>\n          <Bridge />\n        </Game>\n      </StoreProvider>\n    </div >\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/grid.css';\nimport './styles/colors.css';\nimport './styles/controls.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}